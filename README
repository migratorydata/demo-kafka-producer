Here is a demo project that shows how to produce Kafka records using Java to be delivered by MigratoryData with the following options:
* compression, 
* QoS (STANDARD or GUARANTEED)
* retained (as a snapshot message)

It uses MigratoryData Client library 6.0.4, more precisely the utility class **MigratoryDataKafkaUtils** which is documented at:

https://migratorydata.com/docs/client-api/java/classes/interfacemigratorydatakafkautils/

The C# consumer retrieves, decompresses, and displays messages from the MigratoryData server on the console.

Steps to run the example:

1. From `docker` directory start the Kafka server and MigratoryData server using command `docker compose up`.

2. Start the kafka producer from the root directory of the project using command `./gradlew run`.

3. Go to `dotnet-consumer/consumer` and start the consumer using command `dotnet run`.
